{"is_source_file": true, "format": "Python", "description": "This file provides authentication utilities for the backend, including password hashing, password verification, JWT token creation, and token decoding within a FastAPI application.", "external_files": ["os", "datetime", "typing", "jose", "passlib", "fastapi.security", "dotenv"], "external_methods": ["jwt.encode", "jwt.decode", "load_dotenv", "pwd_context.hash", "pwd_context.verify"], "published": ["verify_password", "get_password_hash", "create_access_token", "decode_access_token"], "classes": [], "methods": [{"name": "verify_password(plain_password, hashed_password)", "description": "Verify a plain password against a hashed password.", "scope": "", "scopeKind": ""}, {"name": "get_password_hash(password)", "description": "Hash a password using bcrypt.", "scope": "", "scopeKind": ""}, {"name": "create_access_token(data: dict, expires_delta: Optional[timedelta] = None)", "description": "Create a JWT token with optional expiration.", "scope": "", "scopeKind": ""}, {"name": "decode_access_token(token: str)", "description": "Decode a JWT token to extract user ID.", "scope": "", "scopeKind": ""}], "calls": ["jwt.encode", "jwt.decode"], "search-terms": ["auth.py", "JWT", "password hashing", "FastAPI OAuth2", "JWT secret", "token creation", "JWT decoding"], "state": 2, "file_id": 12, "knowledge_revision": 31, "git_revision": "", "revision_history": [{"25": ""}, {"31": ""}], "ctags": [{"_type": "tag", "name": "ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/auth.py", "pattern": "/^ACCESS_TOKEN_EXPIRE_MINUTES = int(os.getenv(\"ACCESS_TOKEN_EXPIRE_MINUTES\", 60))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ALGORITHM", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/auth.py", "pattern": "/^ALGORITHM = \"HS256\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JWT_SECRET_KEY", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/auth.py", "pattern": "/^JWT_SECRET_KEY = os.getenv(\"JWT_SECRET_KEY\", \"supersecretkey\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/auth.py", "pattern": "/^def create_access_token(data: dict, expires_delta: Optional[timedelta] = None):$/", "language": "Python", "kind": "function", "signature": "(data: dict, expires_delta: Optional[timedelta] = None)"}, {"_type": "tag", "name": "decode_access_token", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/auth.py", "pattern": "/^def decode_access_token(token: str):$/", "language": "Python", "kind": "function", "signature": "(token: str)"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/auth.py", "pattern": "/^def get_password_hash(password):$/", "language": "Python", "kind": "function", "signature": "(password)"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/auth.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/token\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/auth.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/auth.py", "pattern": "/^def verify_password(plain_password, hashed_password):$/", "language": "Python", "kind": "function", "signature": "(plain_password, hashed_password)"}], "hash": "49362842ee5dfafef8818bb687dd9e90", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/auth.py", "fields": [{"name": "ACCESS_TOKEN_EXPIRE_MINUTES = int(os.getenv(\"ACCESS_TOKEN_EXPIRE_MINUTES\", 60))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ALGORITHM = \"HS256\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_SECRET_KEY = os.getenv(\"JWT_SECRET_KEY\", \"supersecretkey\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/token\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}]}