{"is_source_file": true, "format": "Python", "description": "This file defines API route handlers for a note-taking application, managing user registration, authentication, and CRUD operations for notes using FastAPI and SQLAlchemy.", "external_files": ["models", "db", "auth"], "external_methods": ["get_password_hash", "verify_password", "create_access_token", "decode_access_token"], "published": ["router"], "classes": [], "methods": [{"name": "get_db()", "description": "Yields a database session for dependency injection.", "scope": "", "scopeKind": ""}, {"name": "register_user(user: models.UserCreate, db: Session = Depends(get_db))", "description": "Handles user registration, storing a hashed password.", "scope": "", "scopeKind": ""}, {"name": "login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))", "description": "Authenticates a user and issues a JWT access token.", "scope": "", "scopeKind": ""}, {"name": "get_current_user(token: str = Depends(auth.oauth2_scheme), db: Session = Depends(get_db))", "description": "Retrieves the current user based on the provided access token.", "scope": "", "scopeKind": ""}, {"name": "create_note(note: models.NoteCreate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Creates a new note for the authenticated user.", "scope": "", "scopeKind": ""}, {"name": "list_notes(current_user: User = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Lists all notes belonging to the authenticated user.", "scope": "", "scopeKind": ""}, {"name": "get_note(note_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Retrieves a specific note by ID for the authenticated user.", "scope": "", "scopeKind": ""}, {"name": "update_note(note_id: int, note_update: models.NoteUpdate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Updates a note's title or content.", "scope": "", "scopeKind": ""}, {"name": "delete_note(note_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Deletes a specific note owned by the authenticated user.", "scope": "", "scopeKind": ""}], "calls": ["get_password_hash", "verify_password", "create_access_token", "decode_access_token", "db.query", "db.add", "db.commit", "db.refresh", "db.delete"], "search-terms": ["notes_backend/src/api/routes.py", "FastAPI routes", "User registration", "JWT authentication", "notes CRUD", "SQLAlchemy session"], "state": 2, "file_id": 13, "knowledge_revision": 27, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^def create_note(note: models.NoteCreate, current_user: User = Depends(get_current_user), db: Ses/", "language": "Python", "kind": "function", "signature": "(note: models.NoteCreate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^def delete_note(note_id: int, current_user: User = Depends(get_current_user), db: Session = Depe/", "language": "Python", "kind": "function", "signature": "(note_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^def get_current_user(token: str = Depends(auth.oauth2_scheme), db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(token: str = Depends(auth.oauth2_scheme), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^def get_note(note_id: int, current_user: User = Depends(get_current_user), db: Session = Depends/", "language": "Python", "kind": "function", "signature": "(note_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^def list_notes(current_user: User = Depends(get_current_user), db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(current_user: User = Depends(get_current_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^def login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "register_user", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^def register_user(user: models.UserCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(user: models.UserCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^def update_note(note_id: int, note_update: models.NoteUpdate, current_user: User = Depends(get_c/", "language": "Python", "kind": "function", "signature": "(note_id: int, note_update: models.NoteUpdate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))"}], "hash": "a1e299cd7ecfabded4a9defcb9fb389c", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/routes.py", "fields": [{"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"27": ""}]}