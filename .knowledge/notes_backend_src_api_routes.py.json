{"is_source_file": true, "format": "Python", "description": "FastAPI route handlers for user authentication and note management in a note-keeping application.", "external_files": ["models", "auth", "db"], "external_methods": ["get_password_hash", "verify_password", "create_access_token", "decode_access_token"], "published": ["router"], "classes": [], "methods": [{"name": "get_db()", "description": "Generator function that yields a SQLAlchemy database session.", "scope": "", "scopeKind": ""}, {"name": "register_user(user: models.UserCreate, db: Session = Depends(get_db))", "description": "Registers a new user with email and password, returning the created user data.", "scope": "", "scopeKind": ""}, {"name": "login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))", "description": "Authenticates a user and issues an access token.", "scope": "", "scopeKind": ""}, {"name": "get_current_user(token: str = Depends(auth.oauth2_scheme), db: Session = Depends(get_db))", "description": "Retrieves the current authenticated user based on JWT token.", "scope": "", "scopeKind": ""}, {"name": "create_note(note: models.NoteCreate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Creates a new note associated with the current user.", "scope": "", "scopeKind": ""}, {"name": "list_notes(current_user: User = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Fetches all notes belonging to the current user.", "scope": "", "scopeKind": ""}, {"name": "get_note(note_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Retrieves a specific note by ID for the current user.", "scope": "", "scopeKind": ""}, {"name": "update_note(note_id: int, note_update: models.NoteUpdate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Updates the title and/or content of a note for the current user.", "scope": "", "scopeKind": ""}, {"name": "delete_note(note_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Deletes a note owned by the current user.", "scope": "", "scopeKind": ""}], "calls": ["SessionLocal", "db.query", "db.add", "db.commit", "db.refresh", "db.delete", "raise HTTPException", "create_access_token", "decode_access_token", "get_password_hash", "verify_password"], "search-terms": ["FastAPI routes", "OAuth2 authentication", "notes CRUD", "user registration", "JWT token"], "state": 2, "file_id": 13, "knowledge_revision": 33, "git_revision": "57563cf7845343e607f3bf039d5b95ad3fde49a6", "revision_history": [{"27": ""}, {"33": "57563cf7845343e607f3bf039d5b95ad3fde49a6"}], "ctags": [{"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^def create_note(note: models.NoteCreate, current_user: User = Depends(get_current_user), db: Ses/", "language": "Python", "kind": "function", "signature": "(note: models.NoteCreate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^def delete_note(note_id: int, current_user: User = Depends(get_current_user), db: Session = Depe/", "language": "Python", "kind": "function", "signature": "(note_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^def get_current_user(token: str = Depends(auth.oauth2_scheme), db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(token: str = Depends(auth.oauth2_scheme), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^def get_note(note_id: int, current_user: User = Depends(get_current_user), db: Session = Depends/", "language": "Python", "kind": "function", "signature": "(note_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^def list_notes(current_user: User = Depends(get_current_user), db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(current_user: User = Depends(get_current_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^def login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "register_user", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^def register_user(user: models.UserCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(user: models.UserCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-keeper-82001ea6/notes_backend/src/api/routes.py", "pattern": "/^def update_note(note_id: int, note_update: models.NoteUpdate, current_user: User = Depends(get_c/", "language": "Python", "kind": "function", "signature": "(note_id: int, note_update: models.NoteUpdate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))"}], "hash": "9d48efe2d4063bf51e1c73ad5ee97120", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/routes.py", "fields": [{"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}]}